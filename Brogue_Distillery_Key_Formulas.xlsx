[Tab: Key Formulas & Logic]
// This sheet provides a reference for the core calculations driving the Brogue Distillery financial model.

// SECTION 1: SCENARIO SWITCHER
// ---
// Purpose: To allow the entire model to flip between Base, Upside, and Downside cases with a single input.
// ---
// Formula Location: 'Assumptions' tab, for every key input.
// Formula Logic: =CHOOSE(inp_Scenario_Index, Base_Case_Value, Upside_Case_Value, Downside_Case_Value)
// Example (for Year 1 Volume): =CHOOSE('Scenario Switcher'!$B$2, 'Scenario Switcher'!B3, 'Scenario Switcher'!C3, 'Scenario Switcher'!D3)
// Description: The cell 'inp_Scenario_Index' (e.g., 'Scenario Switcher'!B2) holds a number (1, 2, or 3). The CHOOSE function selects the corresponding value from the list. This is the master control for the entire model's scenario analysis.

// SECTION 2: REVENUE ENGINE
// ---
// Purpose: To calculate net revenue based on volume, channel mix, and pricing.
// ---
// 2.1 Monthly Volume by Channel
// Formula Logic: =inp_Annual_Volume * inp_Channel_Mix_Pct * Monthly_Distribution_Pct
// Example: ='Assumptions'!B4 * 'Assumptions'!B36 * 'Revenue Engine'!B1
// Description: Breaks down the annual production target into monthly sales volume for each specific channel (Tasting Room, Club, Wholesale).

// 2.2 Net Revenue
// Formula Logic: =(Monthly_Volume * Price_per_Bottle) * (1 - Returns_Allowance_Pct)
// Description: Calculates the final revenue recognized after accounting for projected returns and allowances, which vary by sales channel.

// SECTION 3: COST OF GOODS SOLD (COGS)
// ---
// Purpose: To calculate the direct, variable costs associated with producing each bottle.
// ---
// 3.1 Raw Spirit Cost per Bottle
// Formula Logic: =inp_ProofGallon_Cost * inp_ProofGallons_per_Bottle
// Description: Converts the cost of bulk spirit (priced per proof gallon) into a per-bottle cost. A critical input sensitive to commodity market fluctuations.

// 3.2 Barrel Amortization per Bottle
// Formula Logic: This is typically a fixed input based on barrel cost and expected yield over time. Example: $1.25 per bottle.
// Description: Spreads the cost of an oak barrel over the number of bottles it helps mature.

// 3.3 Total COGS per Bottle
// Formula Logic: =SUM(Raw_Spirit_Cost, Barrel_Amort, Packaging_Cost, Federal_Excise_Tax, State_Excise_Tax, Freight_Cost)
// Description: The all-in variable cost for one unit. This is subtracted from net revenue per bottle to determine contribution margin.

// SECTION 4: SG&A / OPEX
// ---
// Purpose: To model operating expenses, driven by a detailed headcount plan and variable spending.
// ---
// 4.1 Monthly Headcount-Driven Payroll
// Formula Logic: =IF(current_month >= hire_month, employee_base_salary / 12, 0)
// Description: Activates salary expense for an employee only from their specified start month onwards, allowing for staggered hiring.

// 4.2 Revenue-Driven Marketing Spend
// Formula Logic: =Monthly_Net_Revenue * inp_Marketing_as_Pct_of_Revenue
// Description: Links marketing budget directly to top-line performance, creating a scalable expense line.

// SECTION 5: CAPEX & DEPRECIATION
// ---
// Purpose: To model the purchase of long-term assets and their non-cash expense over time.
// ---
// 5.1 Timed CapEx Spending
// Formula Logic: =IF(current_month = acquisition_month, asset_cost * (1 + inp_Capex_Overrun_Pct), 0)
// Description: Ensures large cash outlays for equipment (stills, forklifts) occur only in the specified month, reflecting project timelines. The overrun % is a key risk lever.

// 5.2 Monthly Straight-Line Depreciation
// Formula Logic: =SUM(Costs_of_Assets_in_Service) / (Useful_Life_in_Years * 12)
// Description: A non-cash expense that reduces taxable income. Calculated separately for different asset classes (e.g., 7-year equipment, 15-year facility improvements).

// SECTION 6: CASHFLOW & RUNWAY
// ---
// Purpose: To track the flow of cash and determine the company's financial runway.
// ---
// 6.1 EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization)
// Formula Logic: =Net_Revenue - COGS - Total_Operating_Expenses
// Description: A key measure of operational profitability, excluding non-cash expenses and financing costs.

// 6.2 Free Cash Flow (to the Firm)
// Formula Logic: =EBITDA - Cash_Taxes_Paid - CapEx_Spending - Increase_in_Net_Working_Capital
// Description: Represents the actual cash generated by the business available to all capital providers (debt and equity).

// 6.3 Revolver Draw / Repayment Logic
// Formula Logic (Draw): =MAX(0, -Cash_Flow_Before_Financing - Beginning_Cash_Balance)
// Formula Logic (Repay): =MIN(Cash_Available_for_Repay, Outstanding_Revolver_Balance)
// Description: A logic gate that automatically draws from a credit line when cash is negative and repays it when cash is positive.

// 6.4 Runway Calculation
// Formula Logic: =Current_Ending_Cash / AVERAGE(Last_6_Months_of_Negative_Cash_Flow)
// Description: The single most important metric for a startup. Calculates how many months the company can survive at its current burn rate.

// SECTION 7: CAP TABLE + SAFE CONVERSION
// ---
// Purpose: To model equity dilution from financing rounds.
// ---
// 7.1 Effective SAFE Conversion Price
// Formula Logic: =MIN(inp_SAFE_Valuation_Cap / Pre_Money_Shares, Series_A_Share_Price * (1 - inp_SAFE_Discount_Rate))
// Description: The heart of SAFE conversion. The SAFE converts at the *lower* of the capped price or the discounted price of the new round, ensuring investors get the better deal.

// 7.2 Post-Money Valuation
// Formula Logic: =Series_A_Pre_Money_Valuation + New_Investment_Amount
// Description: The company's valuation immediately after an equity investment is completed.

[Tab: Sensitivity & Levers]
// This sheet provides templates and instructions for building interactive analysis tools.

// 1. ONE-VARIABLE DATA TABLE TEMPLATE
// ---
// Use Case: Analyze how changing one input (e.g., Tasting Room channel mix) affects multiple outputs.
// ---
// Setup:
// 1. In a blank area, list the input values you want to test in a column (e.g., C5:C10).
// 2. In the row above, to the right of the column header, list the output formulas you want to see (e.g., D4, E4, F4).
// 3. The top-left cell (C4) should be empty.
// 4. Select the entire table range (e.g., C4:F10).
// 5. Go to Excel Ribbon: Data > What-If Analysis > Data Table.
// 6. In the dialog box, for "Column input cell," select the single assumption cell in your model that you are testing (e.g., 'Assumptions'!B36).
// 7. Click OK. The table will populate with the results.

// Example Layout:
// (Cell C4 is blank) | =out_Y1_Net_Revenue | =out_Y1_EBITDA | =out_Y1_Runway_Months
// 10%                | (result populates)  | (result populates) | (result populates)
// 15%                | (result populates)  | (result populates) | (result populates)
// 20% (Base)         | (result populates)  | (result populates) | (result populates)
// 25%                | (result populates)  | (result populates) | (result populates)
// 30%                | (result populates)  | (result populates) | (result populates)

// 2. TWO-VARIABLE DATA TABLE TEMPLATE
// ---
// Use Case: Analyze how two inputs (e.g., CapEx Overrun % and Bottle Velocity) affect a single output (e.g., Runway).
// ---
// Setup:
// 1. In a blank area, list values for the first input down a column (e.g., C16:C21 for CapEx Overrun %).
// 2. List values for the second input across a row (e.g., D15:H15 for Bottle Velocity).
// 3. In the top-left corner of the grid (e.g., C15), enter the formula for the single output you want to measure (e.g., =out_Y1_Runway_Months).
// 4. Select the entire table range (e.g., C15:H21).
// 5. Go to Excel Ribbon: Data > What-If Analysis > Data Table.
// 6. In the dialog box:
//    - "Row input cell": Select the assumption cell for the variable in your row (e.g., 'Assumptions'!B4).
//    - "Column input cell": Select the assumption cell for the variable in your column (e.g., 'Assumptions'!B41).
// 7. Click OK. Use Conditional Formatting (Color Scales) on the results to create a heat map.

// Example Layout:
// =out_Y1_Runway_Months | 40,000 Bottles | 45,000 Bottles | 50,000 Bottles (Base)
// -10% Overrun           | (result)       | (result)       | (result)
// 0% Overrun (Base)      | (result)       | (result)       | (result)
// 10% Overrun            | (result)       | (result)       | (result)
// 20% Overrun            | (result)       | (result)       | (result)

// 3. INTERACTIVE LEVER CONFIGURATIONS
// ---
// Use Case: Create user-friendly dials and sliders to control key assumptions. Requires the "Developer" tab in Excel.
// ---
// Lever 1: Series A Valuation Slider
// Control Type: Form Control > Scroll Bar (or Slider)
// Configuration:
//  - Right-click control > Format Control.
//  - Current value: 30000, Minimum value: 20000, Maximum value: 50000, Incremental change: 1000.
//  - Cell link: Link to a helper cell (e.g., 'Assumptions'!Z1).
//  - The actual assumption cell formula becomes: ='Assumptions'!Z1 * 1000  (This scales the slider's integer output to millions).

// Lever 2: Capex Overrun % Dial
// Control Type: Form Control > Spin Button
// Configuration:
//  - Right-click control > Format Control.
//  - Current value: 0, Minimum value: -10, Maximum value: 30, Incremental change: 5.
//  - Cell link: Link to a helper cell (e.g., 'Assumptions'!Z2).
//  - The actual assumption cell formula becomes: ='Assumptions'!Z2 / 100 (This converts the integer to a percentage).

// Lever 3: Headcount Cadence Toggle
// Control Type: Form Control > Option Buttons
// Configuration:
//  - Insert three option buttons for "Craft Crew," "Base Case," "Scale Crew."
//  - Group them together and link them to a single helper cell (e.g., 'Assumptions'!Z3). This cell will output 1, 2, or 3.
//  - The 'Start Month' for new hires in the SG&A sheet becomes a CHOOSE formula: =Base_Start_Month + CHOOSE('Assumptions'!Z3, 3, 0, -3) (This delays or accelerates hires based on the selection).

[Tab: Named Ranges Dictionary]
// A reference for key named ranges used throughout the model for clarity and auditability.

// --- INPUTS (inp_) ---
// Named Range              | Refers To (Example)       | Description
// inp_Scenario_Index       | ='Scenario Switcher'!$B$2 | Master control (1=Base, 2=Upside, 3=Downside) for the CHOOSE functions.
// inp_Y1_Volume            | ='Assumptions'!$B$4       | Total bottles to be produced and sold in Year 1.
// inp_TR_Price             | ='Assumptions'!$B$13      | Price per bottle sold in the Tasting Room.
// inp_WHS_Price            | ='Assumptions'!$B$15      | FOB price per bottle sold to wholesale distributors.
// inp_ProofGallon_Cost     | ='Assumptions'!$B$21      | The cost of raw, unaged spirit per proof gallon. A key commodity cost.
// inp_Capex_Overrun_Pct    | ='Assumptions'!$B$41      | Percentage by which initial CapEx spending might exceed the budget. A key risk factor.
// inp_Marketing_Pct        | ='Assumptions'!$B$32      | Marketing & Advertising budget as a percentage of Net Revenue.
// inp_Initial_Cash         | ='Assumptions'!$B$50      | The starting cash balance of the company at Month 0.
// inp_SAFE_Amount          | ='Assumptions'!$B$51      | The total cash raised from investors via SAFE notes.
// inp_SAFE_Valuation_Cap   | ='Assumptions'!$B$52      | The valuation cap on the SAFE notes, used for calculating conversion price.
// inp_SeriesA_Valuation    | ='Assumptions'!$B$56      | The target pre-money valuation for the Series A equity round.
// inp_SeriesA_Date         | ='Assumptions'!$B$55      | The target number of months from start until the Series A round closes.

// --- OUTPUTS (out_) ---
// Named Range              | Refers To (Example)       | Description
// out_Y1_Net_Revenue       | ='Cashflow & Runway'!$N$2 | Total net revenue for the first 12 months.
// out_Y1_EBITDA            | ='Cashflow & Runway'!$N$11| Total EBITDA for the first 12 months.
// out_Y1_Ending_Cash       | ='Cashflow & Runway'!$M$35| The cash balance at the end of Month 12.
// out_Current_Runway       | ='Cashflow & Runway'!$M$39| The most recent calculation of cash runway in months.
// out_Breakeven_Month      | ='Cashflow & Runway'!$N$53| The first month in which cumulative cash flow turns positive.
// out_SAFE_Ownership_Pct   | ='Cap Table + SAFE'!$C$20 | The percentage of the company owned by SAFE investors after conversion but before Series A.
